# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page

GET           /                                                                            controllers.HomeController.index

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                controllers.Assets.versioned(path="/public", file: Asset)

GET           /api/read                                                                        controllers.ApplicationController.readDatabaseOrAddFromGithub()


# Database users
POST          /api/create/                                                                 controllers.ApplicationController.createDatabaseUser()

DELETE        /api/delete/:userName                                                        controllers.ApplicationController.deleteDatabaseUser(userName)

PATCH         /api/updateUser/:userName                                                    controllers.ApplicationController.updateDatabaseUser(userName)

GET           /                                                                            controllers.HomeController.index


# Demo Routes

#GET         /githubDemo/:userName                                                          controllers.ApplicationController.getGitHubUser(userName)


GET           /apiDemo/:userName                                                           controllers.ApplicationController.readDataBaseUser(userName)

GET           /addUser/form                                                                controllers.ApplicationController.displayForm()
POST          /addUser/form                                                                controllers.ApplicationController.createDatabaseUserForm()

GET           /findUser                                                                    controllers.ApplicationController.findUser()

GET           /login/login                                                                  controllers.GitHubRepoController.loginAUser()
GET           /login/logout                                                                  controllers.GitHubRepoController.logOut()

GET           /Github/repo/:userName                                                       controllers.GitHubRepoController.getGitHubRepos(userName)
GET           /Github/repo/content/:userName/:repoName                                     controllers.GitHubRepoController.getGitDirsAndFiles(userName, repoName)



GET           /Github/repo/content/:userName/:repoName/:path                               controllers.GitHubRepoController.getGitRepoFileContent(userName, repoName, path)
GET           /Github/repo/dir/:userName/:repoName/:path                                   controllers.GitHubRepoController.openGitDir(userName, repoName, path)

GET        /GitHub/repos/:owner/:repo/contents/:path/:fileName                          controllers.GitHubRepoController.deleteDirectoryOrFile(owner, repo, path, fileName)
GET           /GitHub/deleteRepos/showForm/:userName/:repoName/:sha/:path/:fileName        controllers.GitHubRepoController.displayDeleteForm(userName, repoName, sha, path, fileName)

GET           /GitHub/createFile/showForm/:userName/:repoName/                             controllers.GitHubRepoController.displayCreateFileForm(userName, repoName, path:Option[String])
POST          /GitHub/createFileController/showForm/:userName/:repoName/                   controllers.GitHubRepoController.createFile(userName, repoName, path:Option[String])

POST           /GitHub/editFile/showForm/:userName/:repoName/:path                          controllers.GitHubRepoController.displayEditContent(userName, repoName, path)
POST           /GitHub/editFile/editForm/:userName/:repoName/:path                          controllers.GitHubRepoController.editContent(userName, repoName, path)

